{"version":3,"sources":["components/ListBooking.js"],"names":["ListBooking","props","useState","dataSource","setDataSource","setSearchedColumn","setSearchText","selectedRow","setSelectedRow","searchInput","createRef","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","columns","title","editable","api","useApi","useEffect","getBooking","a","invoke","endPoint","method","response","res","data","map","index","push","console","log","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","disabled","name","className","loading","inProgress","bordered","pagination","scroll","x","y","Item","length","history","pathname","danger","htmlType"],"mappings":"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","file":"static/js/17.6b32b4de.chunk.js","sourcesContent":["import React, {\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  createRef,\r\n} from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form, Space, Col } from \"antd\";\r\nimport {\r\n  EyeOutlined,\r\n  FileTextOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport useApi from \"src/core/useApi\";\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst ListBooking = (props) => {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedRow,setSelectedRow]=useState([]);\r\n  const searchInput = createRef();\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: (text) => (searchedColumn === dataIndex ? text : text),\r\n  });\r\n\r\n  let handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n\r\n  let handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText(\"\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"* Customer Name\",\r\n      dataIndex: \"party_name\",\r\n      editable: false,\r\n      width: \"200\",\r\n      ...getColumnSearchProps(\"customer_name\"),\r\n    },\r\n    {\r\n      title: \"* Vehicle No\",\r\n      dataIndex: \"vehicle_no\",\r\n      editable: false,\r\n      width: \"200\",\r\n      ...getColumnSearchProps(\"vehicle_no\"),\r\n    },\r\n    {\r\n      title: \"* DC.NO\",\r\n      dataIndex: \"dc_no\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* From\",\r\n      dataIndex: \"from_loc\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* To\",\r\n      dataIndex: \"to_loc\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Material\",\r\n      dataIndex: \"material\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Party Name\",\r\n      dataIndex: \"party_name\",\r\n      editable: false,\r\n      width: \"200\",\r\n      ...getColumnSearchProps(\"party_name\"),\r\n    },\r\n    {\r\n      title: \"* Rate\",\r\n      dataIndex: \"rate\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Weight\",\r\n      dataIndex: \"weight\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* GST\",\r\n      dataIndex: \"gst\",\r\n      editable: false,\r\n      width: \"200\",\r\n      ...getColumnSearchProps(\"gst\"),\r\n    },\r\n    {\r\n      title: \"* Payment Type\",\r\n      dataIndex: \"payment_type\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Diseal Rate\",\r\n      dataIndex: \"diesel_rt\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Diseal Qty\",\r\n      dataIndex: \"diesel_qty\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Loading Quantity\",\r\n      dataIndex: \"loading_quantity\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Accepted Quantity\",\r\n      dataIndex: \"accepted_quantity\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Logistic Rent\",\r\n      dataIndex: \"logistic_rent\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Lead\",\r\n      dataIndex: \"lead\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Date\",\r\n      dataIndex: \"date\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* PUC\",\r\n      dataIndex: \"puc\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Expences\",\r\n      dataIndex: \"expences\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Driver Name\",\r\n      dataIndex: \"driver_name\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Tot Amt\",\r\n      dataIndex: \"total_amount\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n    {\r\n      title: \"* Profit\",\r\n      dataIndex: \"profit\",\r\n      editable: false,\r\n      width: \"200\",\r\n    },\r\n  ];\r\n\r\n  let api = useApi();\r\n\r\n  useEffect(() => {\r\n    getBooking();\r\n  }, []);\r\n  const handleView = (record) => {\r\n    props.history.push({\r\n      pathname: \"addBooking\",\r\n      record: record,\r\n      type: \"view\",\r\n    });\r\n  };\r\n  const handleInvoice = (record) => {\r\n    \r\n    props.history.push({ pathname: \"invoice\", record: selectedRow, type: \"view\" });\r\n  };\r\n\r\n  const getBooking = async () => {\r\n    let response = await api.invoke({\r\n      endPoint: \"https://logistic.svtinfra.com/api/getVehicleBooking\",\r\n      method: \"get\",\r\n    });\r\n    let res=[];\r\n    response.data?.map((data,index)=>{\r\n      res.push({\"key\":index,...data});\r\n    });\r\n    setDataSource(res);\r\n    console.log(\"called\", res);\r\n  };  let rowSelection= {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n      setSelectedRow(selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Table\r\n        className=\"listTable\" \r\n        rowSelection={{\r\n          type: \"checkbox\",\r\n          ...rowSelection,\r\n        }}\r\n        loading={api.inProgress}\r\n        bordered\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={false}\r\n        scroll={{ x: 5000,y:900 }}\r\n      />\r\n       <Col>\r\n            <Form.Item>\r\n              <Button disabled={selectedRow.length===0} onClick={handleInvoice} type={\"primary\"} danger htmlType=\"submit\">\r\n                get Invoice\r\n              </Button>\r\n            </Form.Item>\r\n          </Col>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListBooking;\r\n"],"sourceRoot":""}