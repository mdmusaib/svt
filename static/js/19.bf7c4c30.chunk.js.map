{"version":3,"sources":["components/ListVehicles.js"],"names":["ListVehicle","props","useState","dataSource","setDataSource","setSearchedColumn","setSearchText","searchInput","createRef","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","columns","title","editable","_","length","cursor","whiteSpace","handleView","api","useApi","useEffect","getBooking","history","push","pathname","a","invoke","endPoint","method","response","data","console","log","overflowX","loading","inProgress","bordered","pagination"],"mappings":"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","file":"static/js/19.bf7c4c30.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect, useRef, createRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form, Space } from \"antd\";\r\nimport { EyeOutlined,FileTextOutlined,SearchOutlined } from \"@ant-design/icons\";\r\nimport useApi from \"src/core/useApi\";\r\nconst EditableContext = React.createContext(null);\r\n\r\n\r\n\r\n\r\n\r\nconst ListVehicle=props=>{\r\nconst [dataSource,setDataSource]=useState([]);\r\nconst [searchedColumn,setSearchedColumn]=useState('');\r\nconst [searchText,setSearchText]=useState('');\r\nconst searchInput=createRef();\r\nconst getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        text\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  let handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex)\r\n    \r\n  };\r\n\r\n  let handleReset = clearFilters => {\r\n    clearFilters();\r\n    setSearchText('')\r\n    \r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      title: \"* Vehicle Number\",\r\n      dataIndex: \"vehicle_no\",\r\n      editable: false,\r\n      width: \"50%\",\r\n      ...getColumnSearchProps('customer_name'),\r\n    },\r\n    {\r\n      title: \"Service Location\",\r\n      dataIndex: \"service_loc\",\r\n      editable: false,\r\n      width: \"50%\",\r\n      ...getColumnSearchProps('receiver_address'),\r\n    },\r\n  //   {\r\n  //     title: \"Items \",\r\n  //     dataIndex: \"items\",\r\n  //     editable: false,\r\n  //     width: \"50%\",\r\n  //   },\r\n  //   {\r\n  //     title: \"* Material\",\r\n  //     dataIndex: \"material\",\r\n  //     editable: false,\r\n  //     width: \"50%\",\r\n  //   },\r\n  //   {\r\n  //     title: \"* Party Name\",\r\n  //     dataIndex: \"party_name\",\r\n  //     editable: false,\r\n  //     width: \"50%\",\r\n  //   },\r\n    {\r\n      title: \"* Vehicle Provider\",\r\n      dataIndex: \"vehicle_provider\",\r\n      editable: false,\r\n      width: \"50%\",\r\n      \r\n    },\r\n  //   {\r\n  //     title: \"* Scale\",\r\n  //     dataIndex: \"scale\",\r\n  //     editable: false,\r\n  //     width: \"50%\",\r\n  //   },\r\n    {\r\n      title: \"* Transport Type\",\r\n      dataIndex: \"transport_type\",\r\n      editable: false,\r\n      width: \"70%\",\r\n    },\r\n    {\r\n      title: \"* Vehicle Details\",\r\n      dataIndex: \"vehicle_details\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"* Permit\",\r\n      dataIndex: \"permit\",\r\n      editable: false,\r\n    },\r\n    {\r\n      title: \"* Permit Expiry Date\",\r\n      dataIndex: \"permit_expiry_date\",\r\n      editable: false,\r\n    },\r\n    {\r\n    title: \"Operations\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) =>\r\n       dataSource.length >= 1 ? (\r\n\r\n          <div  title=\"View Booking\" style={{cursor:\"pointer\", whiteSpace:\"nowrap\"}} >\r\n            <EyeOutlined style={{cursor:\"pointer\"}} onClick={()=>handleView(record)}/>&nbsp;&nbsp;&nbsp;\r\n          </div>\r\n            \r\n        ) : null,\r\n        width: \"60%\",\r\n    },\r\n  ];\r\n\r\n  let api=useApi();\r\n\r\n  useEffect(()=>{\r\n    getBooking();\r\n  },[])\r\nconst handleView=(record)=>{\r\n    props.history.push({pathname:\"addTruck\",record:record,type:\"view\"});\r\n}\r\nconst handleInvoice=(record)=>{\r\n    props.history.push({pathname:\"invoice\",record:record,type:\"view\"});\r\n}\r\n\r\n  const getBooking=async()=>{\r\n    let response=await api.invoke({endPoint:\"https://logistic.svtinfra.com/api/getVehicle\",method:\"get\"});\r\n    setDataSource(response.data);\r\n    console.log(\"called\", response);\r\n  }\r\n\r\n      return (\r\n      <div style={{ width: \"100%\", overflowX: \"scroll\" }}>\r\n       \r\n        <Table\r\n          loading={api.inProgress}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default ListVehicle;\r\n"],"sourceRoot":""}