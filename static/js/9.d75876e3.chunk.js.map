{"version":3,"sources":["components/FileUpload.js","components/BookingPage.js","components/EditingTableInBooking.js","components/EditingTableForVechicle.js"],"names":["FileUpload","useState","imagedata","setImageData","useRef","className","style","paddingTop","paddingLeft","span","placeholder","id","type","multiple","class","onChange","e","file","target","files","marginLeft","marginTop","danger","htmlType","onClick","evt","preventDefault","fd","FormData","name","document","getElementById","value","append","axios","post","then","res","console","log","Select","Option","BookingPage","props","Form","useForm","form","containerRef","api","useApi","setTableData","vehicleTableData","setVehicleTableData","useEffect","window","matchMedia","matches","current","padding","location","setFieldsValue","record","JSON","parse","items","vehicle_details","handleSubmit","a","bookingDetails","invoke","endPoint","method","data","response","status","resetFields","alert","ref","EditingTableForVechicle","getTableData","vehicle_data","lastRow","pop","parseInt","rate","weight","total_amt","total_amount","gst","calculatedGST","toFixed","rowData","view","gutter","Item","EditableContext","React","createContext","EditableRow","index","component","Provider","EditableCell","title","editable","children","dataIndex","handleSave","restProps","editing","setEditing","inputRef","useContext","focus","toggleEdit","save","validateFields","values","childNode","margin","rules","required","message","onPressEnter","onBlur","paddingRight","Component","customerData","setCustomerData","getAllCustomer","map","handleDelete","key","dataSource","state","setState","filter","item","handleAdd","count","newData","vehicle_no","dc_no","from_loc","to_loc","material","party_name","scale","payment_type","diesel_rt","diesel_qty","loading_quantity","accepted_quantity","logistic_rent","lead","date","puc","expences","driver_name","profit","row","findIndex","splice","columns","width","render","_","length","onConfirm","color","prevProps","prevState","stringify","this","components","body","cell","col","onCell","marginBottom","rowClassName","bordered","pagination","scroll","x"],"mappings":"6VAgGgBA,EAnFG,WAAK,IAAD,EACUC,mBAAS,IADnB,mBACdC,EADc,KACJC,EADI,KAELC,mBA6BlB,OAEE,qBAAKC,UAAU,cAAf,SACE,eAAC,IAAD,CAAMC,MAAO,CAAEC,WAAY,GAAIC,YAAa,KAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,kDAEF,cAAC,IAAD,CAAKA,KAAM,GAAX,SAKI,uBAAOC,YAAY,KAAMC,GAAG,cAIlC,eAAC,IAAD,WACE,cAAC,IAAD,CAAKF,KAAM,EAAX,SACE,+CAEF,cAAC,IAAD,CAAKA,KAAM,GAAX,SACE,uBACEG,KAAK,OACLC,SAAS,OACTC,MAAM,2BACNH,GAAG,SACHI,SAAW,SAACC,GAAD,OAtDLC,EAsDyBD,EAAEE,OAAOC,WApDlDhB,EAAac,EAAK,IAFH,IAACA,UA2DZ,cAAC,IAAD,CAAKR,KAAM,GAAX,SAEI,cAAC,IAAD,CACEH,MAAO,CAAEc,WAAY,MAAOC,UAAW,OACvCT,KAAM,UACNU,QAAM,EACNC,SAAS,SACTC,QA1DM,SAACC,GAEbA,EAAIC,iBACJ,IAAMC,EAAK,IAAIC,SACTC,EAAKC,SAASC,eAAe,QAAQC,MAC3CL,EAAGM,OAAO,QAAS/B,GACnByB,EAAGM,OAAO,OAAOJ,GAGjBK,IAAMC,KAAK,+CAAgDR,GACzDS,MAAK,SAAAC,GAGTC,QAAQC,IAAI,MAAMF,OAwCZ,4B,SC/DSG,IAAXC,OA4IOC,UA1IK,SAACC,GAAW,IAAD,IACdC,IAAKC,UAAbC,EADsB,oBAEzBC,EAAe3C,mBACf4C,EAAMC,cAHmB,EAKKhD,mBAAS,IALd,mBAKXiD,GALW,aAMmBjD,mBAAS,IAN5B,mBAMtBkD,EANsB,KAMJC,EANI,KAO7BC,qBAAU,WACOC,OAAOC,WAAW,sBAAsBC,UAErDT,EAAaU,QAAQnD,MAAMoD,QAAU,eAEtC,IAEHL,qBAAU,WAAO,IAAD,EACgB,UAArB,OAALV,QAAK,IAALA,GAAA,UAAAA,EAAOgB,gBAAP,eAAiB/C,QACnBkC,EAAKc,eAAejB,EAAMgB,SAASE,QACnCX,EAAaY,KAAKC,MAAMpB,EAAMgB,SAASE,OAAOG,QAC9CZ,EAAoBT,EAAMgB,SAASE,OAAOI,oBAG3C,QAACtB,QAAD,IAACA,GAAD,UAACA,EAAOgB,gBAAR,aAAC,EAAiB/C,OAErB,IAAMsD,EAAY,uCAAG,WAAOlC,GAAP,iBAAAmC,EAAA,6DACfC,EAAiB,CAAEH,gBAAiBd,GACxCb,QAAQC,IAAI,SAAU6B,GAFH,SAGEpB,EAAIqB,OAAO,CAC9BC,SAAU,+CACVC,OAAQ,OACRC,KAAMJ,IANW,OAQK,KALpBK,EAHe,QAQNC,QACX5B,EAAK6B,cACLvB,EAAoB,KAEpBwB,MAAM,8DAGRtC,QAAQC,IAAI,SAAUkC,GAfH,2CAAH,sDA8ElB,OACE,sBAAKI,IAAK9B,EAAczC,MAAO,CAAEoD,QAAS,aAA1C,UAEE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAACoB,EAAA,EAAD,CACEC,aAlEuB,SAACP,GAC9B,IAAIQ,EAAY,YAAOR,GACnBS,EAAUD,EAAaE,MAC3B,GAAIC,SAASF,EAAQG,OAASD,SAASF,EAAQI,QAAS,CACtD,IAAIC,EAAYH,SAASF,EAAQG,MAAQD,SAASF,EAAQI,QAC1DJ,EAAQM,aAAeD,EAEzB,GAAoB,QAAhBL,EAAQO,KAAiBP,EAAQM,aAAc,CACjD,IAAIE,EACFR,EAAQM,aAAuC,EAAvBN,EAAQM,aAAoB,IACtDN,EAAQM,aAAeE,EAAcC,QAAQ,GAE/CpD,QAAQC,IAAI,OAAQyC,EAAcC,GAClC7B,EAAoB,GAAD,mBAAK4B,GAAL,CAAmBC,MAsDhCU,QAASxC,EACTyC,KAA8B,SAAxBjD,EAAMgB,SAAS/C,OAEvB,uBACyB,SAAxB+B,EAAMgB,SAAS/C,KACd,GAEA,eAAC,IAAD,CAAKiF,OAAQ,GAAb,UACE,cAAC,IAAD,UACE,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CACEtE,QAAS0C,EACTtD,KAAM,UACNU,QAAM,EACNC,SAAS,SAJX,wBAUJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAQC,QAxEA,WAClBsB,EAAK6B,cACLzB,EAAa,KAsEH,gC,gOC/IR6C,EAAkBC,IAAMC,cAAc,MAEtCC,EAAc,SAAC,GAAwB,EAAtBC,MAAuB,IAAbxD,EAAY,2BAC5BC,IAAKC,UAAbC,EADoC,oBAE3C,OACE,cAAC,IAAD,CAAMA,KAAMA,EAAMsD,WAAW,EAA7B,SACE,cAACL,EAAgBM,SAAjB,CAA0BrE,MAAOc,EAAjC,SACE,kCAAQH,SAMV2D,EAAe,SAAC,GAQf,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACA7C,EAGI,EAHJA,OACA8C,EAEI,EAFJA,WACGC,EACC,mFAC0B3G,oBAAS,GADnC,mBACG4G,EADH,KACYC,EADZ,KAEEC,EAAW3G,iBAAO,MAClB0C,EAAOkE,qBAAWjB,GACxB1C,qBAAU,WACJwD,GACFE,EAAStD,QAAQwD,UAElB,CAACJ,IAEJ,IAAMK,EAAa,WACjBJ,GAAYD,GACZ/D,EAAKc,eAAL,eACG8C,EAAY7C,EAAO6C,MAIlBS,EAAI,uCAAG,4BAAAhD,EAAA,+EAEYrB,EAAKsE,iBAFjB,OAEHC,EAFG,OAGTH,IACAP,EAAW,2BAAK9C,GAAWwD,IAJlB,gDAMT/E,QAAQC,IAAI,eAAZ,MANS,yDAAH,qDAUN+E,EAAYb,EA+BhB,OA7BID,IACFc,EAAYT,EACV,cAAC,IAAKf,KAAN,CACExF,MAAO,CACLiH,OAAQ,GAEV1F,KAAM6E,EACNc,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,GAAD,OAAKnB,EAAL,mBARb,SAYE,cAAC,IAAD,CAAO1B,IAAKkC,EAAUY,aAAcR,EAAMS,OAAQT,MAGpD,qBACE9G,UAAU,2BACVC,MAAO,CACLuH,aAAc,IAEhBrG,QAAS0F,EALX,SAOGT,KAKA,8CAAQG,GAAR,aAAoBU,MAGOtB,IAAM8B,W,2PC/EpC/B,EAAkBC,IAAMC,cAAc,MACpCxD,EAAWD,IAAXC,OACFyD,EAAc,SAAC,GAAwB,EAAtBC,MAAuB,IAAbxD,EAAY,2BAC5BC,IAAKC,UAAbC,EADoC,oBAE3C,OACE,cAAC,IAAD,CAAMA,KAAMA,EAAMsD,WAAW,EAA7B,SACE,cAACL,EAAgBM,SAAjB,CAA0BrE,MAAOc,EAAjC,SACE,kCAAQH,SAMV2D,EAAe,SAAC,GAQf,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACA7C,EAGI,EAHJA,OACA8C,EAEI,EAFJA,WACGC,EACC,mFAC0B3G,oBAAS,GADnC,mBACG4G,EADH,KACYC,EADZ,KAEEC,EAAW3G,iBAAO,MAClB0C,EAAOkE,qBAAWjB,GACpB/C,EAAIC,cACRI,qBAAU,WACJwD,GACFE,EAAStD,QAAQwD,UAElB,CAACJ,IATA,MAUoC5G,mBAAS,IAV7C,mBAUG8H,EAVH,KAUiBC,EAVjB,KAWJ3E,qBAAU,WACR4E,MACC,IACH,IAAMA,EAAc,uCAAC,4BAAA9D,EAAA,sEACAnB,EAAIqB,OAAO,CAACC,SAAS,sCAAsCC,OAAO,QADlE,OACfE,EADe,OAEnBuD,EAAgBvD,GAChBnC,QAAQC,IAAI,WAAWkC,GAHJ,2CAAD,qDAMdyC,EAAa,WACjBJ,GAAYD,GACZ/D,EAAKc,eAAL,eACG8C,EAAY7C,EAAO6C,MAGlBS,EAAI,uCAAG,4BAAAhD,EAAA,+EAEYrB,EAAKsE,iBAFjB,OAEHC,EAFG,OAGTH,IACAP,EAAW,2BAAK9C,GAAWwD,IAJlB,gDAMT/E,QAAQC,IAAI,eAAZ,MANS,yDAAH,qDAeN+E,EAAYb,EAGhB,GAAID,EACJ,GAAGK,EAED,OAAQH,GAmBN,IAAK,aACHY,EAAY,cAAC,IAAKxB,KAAN,CACZxF,MAAO,CACLiH,OAAQ,GAEV1F,KAAM6E,EACNc,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,GAAD,OAAKnB,EAAL,mBARC,SAYd,cAAC,IAAD,CAAQ1B,IAAKkC,EAAWhG,SAAUoG,EAAlC,SACCY,EAAaG,KAAI,SAAA1D,GAAI,OACpB,wBAAQxC,MAAK,UAAKwC,EAAK3C,MAAvB,SAAgC2C,EAAK3C,cAIrC,MACF,IAAK,MACLyF,EAAY,cAAC,IAAKxB,KAAN,CACZxF,MAAO,CACLiH,OAAQ,GAEV1F,KAAM6E,EACNc,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,GAAD,OAAKnB,EAAL,mBARC,SAYd,eAAC,IAAD,CAAQ1B,IAAKkC,EAAWhG,SAAUoG,EAAlC,UACA,cAAC1E,EAAD,CAAQT,MAAM,MAAd,iBACA,cAACS,EAAD,CAAQT,MAAM,KAAd,qBAGE,MACA,QACEsF,EACA,cAAC,IAAKxB,KAAN,CACAxF,MAAO,CACLiH,OAAQ,GAEV1F,KAAM6E,EACNc,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,GAAD,OAAKnB,EAAL,mBARX,SAYA,cAAC,IAAD,CAAO1B,IAAKkC,EAAUY,aAAcR,EAAMS,OAAQT,WAKtDG,EAAW,qBACXjH,UAAW,2BACXC,MAAO,CACLuH,aAAc,IAEhBrG,QAAS0F,EALE,SAOVT,IA2CH,OAAO,8CAAQG,GAAR,aAAoBU,MAGvBxC,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAuKRwF,aAAe,SAACC,GACd,IAAMC,EAAU,YAAO,EAAKC,MAAMD,YAClC,EAAKE,SAAS,CACZF,WAAYA,EAAWG,QAAO,SAACC,GAAD,OAAUA,EAAKL,MAAQA,QA3KtC,EA+KnBM,UAAY,WAAO,IAAD,EACc,EAAKJ,MAA3BK,EADQ,EACRA,MAAON,EADC,EACDA,WACTO,EAAU,CACdR,IAAKO,EACLE,WAAY,GACZC,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRC,SAAU,GACVC,WAAY,GACZ9D,KAAM,GACN+D,MAAO,GACP9D,OAAO,GACPG,IAAI,GACJ4D,aAAa,GACbC,UAAU,GACVC,WAAW,GACXC,iBAAiB,GACjBC,kBAAkB,GAClBC,cAAc,GACdC,KAAK,GACLC,KAAK,GACLC,IAAI,GACJrE,aAAc,GACdsE,SAAU,GACVC,YAAa,GACbC,OAAQ,IAGV,EAAKxB,SAAS,CACZF,WAAW,GAAD,mBAAMA,GAAN,CAAkBO,IAC5BD,MAAOA,EAAQ,KA9MA,EAkNnBhC,WAAa,SAACqD,GACZ,IAAMpB,EAAO,YAAO,EAAKN,MAAMD,YACzBlC,EAAQyC,EAAQqB,WAAU,SAACxB,GAAD,OAAUuB,EAAI5B,MAAQK,EAAKL,OACrDK,EAAOG,EAAQzC,GACrByC,EAAQsB,OAAO/D,EAAO,EAAtB,2BAA8BsC,GAASuB,IACvC,EAAKzB,SACH,CACEF,WAAYO,IAEd,kBAAM,EAAKjG,MAAMoC,aAAa,EAAKuD,MAAMD,gBAxN3C,EAAK8B,QAAU,CACb,CACE5D,MAAO,eACPG,UAAW,aACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,UACPG,UAAW,QACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,SACPG,UAAW,WACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,OACPG,UAAW,SACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,aACPG,UAAW,WACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,eACPG,UAAW,aACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,SACPG,UAAW,OACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,WACPG,UAAW,SACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,QACPG,UAAW,MACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,iBACPG,UAAW,eACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,gBACPG,UAAW,YACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,eACPG,UAAW,aACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,qBACPG,UAAW,mBACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,sBACPG,UAAW,oBACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,kBACPG,UAAW,gBACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,SACPG,UAAW,OACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,SACPG,UAAW,OACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,QACPG,UAAW,MACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,aACPG,UAAW,WACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,gBACPG,UAAW,cACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,WACPG,UAAW,SACXF,UAAU,EACV4D,MAAO,OAET,CACE7D,MAAO,YACPG,UAAW,eACXF,UAAU,EACV4D,MAAO,OAIT,CACE7D,MAAO,GACPG,UAAW,YACX2D,OAAQ,SAACC,EAAGzG,GAAJ,OACN,EAAKyE,MAAMD,WAAWkC,QAAU,EAC9B,cAAC,IAAD,CACEhE,MAAM,kBACNiE,UAAW,kBAAM,EAAKrC,aAAatE,EAAOuE,MAF5C,SAIE,cAAC,IAAD,CAAgB9H,MAAO,CAACmK,MAAM,aAE9B,QAGV,EAAKnC,MAAQ,CACXD,WAAY,GACZM,MAAO,GA1JQ,E,sDA8JnB,SAAmB+B,EAAWC,GAE1B7G,KAAK8G,UAAUF,EAAU/E,WAAa7B,KAAK8G,UAAUC,KAAKlI,MAAMgD,UAEhEkF,KAAKtC,SAAS,CACZF,WAAYwC,KAAKlI,MAAMgD,Y,oBA4D7B,WAAU,IAAD,OACC0C,EAAewC,KAAKvC,MAApBD,WACFyC,EAAa,CACjBC,KAAM,CACJf,IAAK9D,EACL8E,KAAM1E,IAGJ6D,EAAUU,KAAKV,QAAQjC,KAAI,SAAC+C,GAChC,OAAKA,EAAIzE,SAIF,2BACFyE,GADL,IAEEC,OAAQ,SAACrH,GAAD,MAAa,CACnBA,SACA2C,SAAUyE,EAAIzE,SACdE,UAAWuE,EAAIvE,UACfH,MAAO0E,EAAI1E,MACXI,WAAY,EAAKA,WACjByD,MAAMa,EAAIb,UAXLa,KAgBX,OACE,sBAAK3K,MAAO,CAAE8J,MAAO,QAArB,UACIS,KAAKlI,MAAMiD,KAAK,GAAG,cAAC,IAAD,CACnBpE,QAASqJ,KAAKnC,UACd9H,KAAK,UACLN,MAAO,CACL6K,aAAc,IAJG,uBASrB,cAAC,IAAD,CACEL,WAAYA,EAEZzK,UAAU,eACV+K,aAAc,iBAAM,gBACpBC,UAAQ,EACRhD,WAAYA,EACZ8B,QAASA,EACTmB,YAAY,EACZC,OAAQ,CAAEC,EAAG,e,GA9QexF,IAAM8B,WAqR7BhD,O","file":"static/js/9.d75876e3.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\n// import './App.css';\r\n//Success POPUP\r\n// import Swal from 'sweetalert2'\r\n//For API Requests\r\nimport axios from 'axios';\r\nimport Form from 'antd/lib/form/Form';\r\nimport { Button, Col, Input, Row } from 'antd';\r\nimport {\r\n\r\n  UserOutlined,\r\n \r\n} from \"@ant-design/icons\";\r\nconst  FileUpload =()=>{\r\n  const [imagedata,setImageData]=useState('');\r\n  const myFormRef=useRef(); \r\n//FileChange\r\nlet handleChange=(file)=>{\r\n\r\n  setImageData(file[0]);\r\n\r\n\r\n}\r\n\r\n  //Form Submission\r\n  let addFormData=(evt)=>{\r\n    \r\n      evt.preventDefault();\r\n      const fd = new FormData();\r\n      const name=document.getElementById(\"name\").value;\r\n      fd.append('image', imagedata);\r\n      fd.append('name',name );\r\n     \r\n      //Post Request to laravel API Route\r\n      axios.post('https://logistic.svtinfra.com/api/uploadFile', fd\r\n      ).then(res=>\r\n      {\r\n    // myFormRef.current.reset();\r\n    console.log('res',res)\r\n    \r\n    }\r\n    );\r\n    \r\n}\r\nreturn (\r\n      \r\n  <div className=\"file_upload\">\r\n    <Form style={{ paddingTop: 20, paddingLeft: 180 }} >\r\n      <Row>\r\n        <Col span={5}>\r\n          <label>DC CHALAN *</label>\r\n        </Col>\r\n        <Col span={11}>\r\n          {/* <Form.Item\r\n            name=\"name\"\r\n            rules={[{ required: true, message: \"Please enter your name!\" }]}\r\n          > */}\r\n            <input placeholder=\"No\"  id=\"name\" />\r\n          {/* </Form.Item> */}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={5}>\r\n          <label>Images *</label>\r\n        </Col>\r\n        <Col span={11}>\r\n          <input\r\n            type=\"file\"\r\n            multiple=\"true\"\r\n            class=\"form-control-file border\"\r\n            id=\"images\"\r\n            onChange={ (e) => handleChange(e.target.files) } \r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Col span={11}>\r\n        {/* <Form.Item> */}\r\n          <Button\r\n            style={{ marginLeft: \"80%\", marginTop: \"5px\" }}\r\n            type={\"primary\"}\r\n            danger\r\n            htmlType=\"submit\"\r\n            onClick={addFormData}\r\n          >\r\n            Submit\r\n          </Button>\r\n        {/* </Form.Item> */}\r\n      </Col>\r\n    </Form>\r\n  </div> \r\n\r\n   \r\n)\r\n}\r\n\r\n export default FileUpload;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, DatePicker, Form, Input, Row, Select } from \"antd\";\r\nimport {\r\n  MailOutlined,\r\n  MobileOutlined,\r\n  UserOutlined,\r\n  PercentageOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport EditingTableInBooking from \"./EditingTableInBooking\";\r\nimport EditingTableForVechicle from \"./EditingTableForVechicle\";\r\nimport FileUpload from \"./FileUpload\";\r\nimport useApi from \"src/core/useApi\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst BookingPage = (props) => {\r\n  const [form] = Form.useForm();\r\n  let containerRef = useRef();\r\n  let api = useApi();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [vehicleTableData, setVehicleTableData] = useState([]);\r\n  useEffect(() => {\r\n    let lgScreen = window.matchMedia(\"(min-width: 768px)\").matches;\r\n    if (lgScreen) {\r\n      containerRef.current.style.padding = \"20px 60px\";\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props?.location?.type === \"view\") {\r\n      form.setFieldsValue(props.location.record);\r\n      setTableData(JSON.parse(props.location.record.items));\r\n      setVehicleTableData(props.location.record.vehicle_details);\r\n      // console.log(JSON.parse(props.location.record.vehicle_details))\r\n    }\r\n  }, [props?.location?.type]);\r\n\r\n  const handleSubmit = async (value) => {\r\n    let bookingDetails = { vehicle_details: vehicleTableData };\r\n    console.log(\"upload\", bookingDetails);\r\n    let response = await api.invoke({\r\n      endPoint: \"https://logistic.svtinfra.com/api/addBooking\",\r\n      method: \"post\",\r\n      data: bookingDetails,\r\n    });\r\n    if (response.status === 1) {\r\n      form.resetFields();\r\n      setVehicleTableData([]);\r\n    } else {\r\n      alert(\"Something Went Wroung You Booking Couldn`t able to create!\");\r\n    }\r\n\r\n    console.log(\"called\", response);\r\n  };\r\n\r\n  const getTableDataForVehicle = (data) => {\r\n    let vehicle_data = [...data];\r\n    let lastRow = vehicle_data.pop();\r\n    if (parseInt(lastRow.rate) && parseInt(lastRow.weight)) {\r\n      let total_amt = parseInt(lastRow.rate) * parseInt(lastRow.weight);\r\n      lastRow.total_amount = total_amt;\r\n    }\r\n    if (lastRow.gst === \"yes\" && lastRow.total_amount) {\r\n      let calculatedGST =\r\n        lastRow.total_amount + (lastRow.total_amount * 5) / 100;\r\n      lastRow.total_amount = calculatedGST.toFixed(2);\r\n    }\r\n    console.log(\"data\", vehicle_data, lastRow);\r\n    setVehicleTableData([...vehicle_data, lastRow]);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    form.resetFields();\r\n    setTableData([]);\r\n  };\r\n\r\n  const handleUpload = (res) => {\r\n    let images = document.getElementById(\"images\").files;\r\n    let name = document.getElementById(\"name\").value;\r\n    if (!images.length) return;\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        console.log(\"Images\", e.target.result);\r\n        fetch(\"https://logistic.svtinfra.com/api/uploadFile\", {\r\n          method: \"POST\",\r\n          body: {images:e.target.result},\r\n        })\r\n          .then((response) => response.json())\r\n          .catch((error) => console.error(\"Error:\", error))\r\n          .then((response) => console.log(\"Success:\", response));\r\n      };\r\n      reader.readAsDataURL(images[i]);\r\n    }\r\n\r\n   \r\n\r\n    // let data = new FormData();\r\n    // data.append(\"images\", images);\r\n    // data.append(\"name\", name);\r\n\r\n    // //   let settings = { headers: { 'content-type': 'multipart/form-data' },method: \"POST\" }\r\n\r\n    // //   fetch('http://localhost:8000/api/uploadFile', data, settings)\r\n    // //  .then(response => {\r\n    // //   console.log(response)\r\n    // //  }).catch(response => {\r\n    // //   console.log(response)\r\n    // //  })\r\n\r\n    // // }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ padding: \"20px 10px\" }}>\r\n      \r\n      <FileUpload/>\r\n      <Row>\r\n        <EditingTableForVechicle\r\n          getTableData={getTableDataForVehicle}\r\n          rowData={vehicleTableData}\r\n          view={props.location.type === \"view\"}\r\n        />\r\n        <hr />\r\n        {props.location.type === \"view\" ? (\r\n          \"\"\r\n        ) : (\r\n          <Row gutter={16}>\r\n            <Col>\r\n              <Form.Item>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type={\"primary\"}\r\n                  danger\r\n                  htmlType=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditingTableInBooking extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: \"* Commodity\",\r\n        dataIndex: \"commodity\",\r\n        width: 200,\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"* Weight in KGs\",\r\n        width: 200,\r\n        dataIndex: \"weight\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <DeleteOutlined />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(prevProps.rowData) !== JSON.stringify(this.props.rowData)\r\n    ) {\r\n      this.setState({\r\n        dataSource: this.props.rowData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      commodity: `0`,\r\n      weight: \"0\",\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n   \r\n\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState(\r\n      {\r\n        dataSource: newData,\r\n      },\r\n      () => this.props.getTableData(this.state.dataSource)\r\n    );\r\n  };\r\n  \r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n  \r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onHeaderCell: (column) => ({\r\n          width: column.width,\r\n        }),\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        {this.props.view ? (\r\n          \"\"\r\n        ) : (\r\n          <Button\r\n            onClick={this.handleAdd}\r\n            type=\"primary\"\r\n            style={{\r\n              marginBottom: 16,\r\n            }}\r\n          >\r\n            Add a row\r\n          </Button>\r\n        )}\r\n\r\n        <Table\r\n          components={components}\r\n         \r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n          scroll={{ x: 2400 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditingTableInBooking;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { Table, Input, Button, Popconfirm, Form, Select } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"./styles.css\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport useApi from \"src/core/useApi\";\r\nconst EditableContext = React.createContext(null);\r\nconst { Option } = Select;\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  let api=useApi();\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n  const [customerData, setCustomerData] = useState([]);\r\n  useEffect(() => {\r\n    getAllCustomer();\r\n  }, []);\r\n  const getAllCustomer=async ()=>{\r\n    let response=await api.invoke({endPoint:\"http://localhost:8000/api/customers\",method:\"get\"}); \r\n    setCustomerData(response);\r\n    console.log('response',response);\r\n  }\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const handleUpload=async (event)=>{\r\n\r\n// console.log(\"attachments\",event.target.files)\r\n    // handleSave({...record,images:formData});\r\n  }\r\n  let childNode = children;\r\n\r\n\r\n  if (editable) {\r\n  if(editing){\r\n\r\n    switch (dataIndex) {\r\n      // case \"images\":\r\n      //   childNode=\r\n      //   <Form.Item\r\n      //   style={{\r\n      //     margin: 0,\r\n      //   }}\r\n      //   name={dataIndex}\r\n      //   rules={[\r\n      //     {\r\n      //       required: false,\r\n      //       message: `${title} is required.`,\r\n      //     },\r\n      //   ]}\r\n      // ><div className=\"mb-3\">\r\n      // <input ref={inputRef} type=\"file\" class=\"form-control-file border\"  name=\"fileInput\" onChange={(event)=>handleUpload(event)} multiple=\"true\" />\r\n      // </div>\r\n      // </Form.Item>\r\n      //   break;\r\n      case \"party_name\":\r\n        childNode=  <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n      <Select ref={inputRef}  onChange={save}>\r\n      {customerData.map(data=>\r\n        <option value={`${data.name}`}>{data.name}</option>\r\n        )} \r\n      </Select>\r\n      </Form.Item>;\r\n        break;\r\n      case \"gst\":\r\n      childNode=  <Form.Item\r\n      style={{\r\n        margin: 0,\r\n      }}\r\n      name={dataIndex}\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: `${title} is required.`,\r\n        },\r\n      ]}\r\n    >\r\n    <Select ref={inputRef}  onChange={save}> \r\n    <Option value=\"yes\">YES</Option>\r\n    <Option value=\"no\">NO</Option>\r\n    </Select>\r\n    </Form.Item>;\r\n      break;\r\n      default:\r\n        childNode=\r\n        <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n        break;\r\n    }\r\n  }else{\r\n    childNode=(<div\r\n    className={\"editable-cell-value-wrap\"}\r\n    style={{\r\n      paddingRight: 24,\r\n    }}\r\n    onClick={toggleEdit}\r\n  >\r\n    {children}\r\n  </div>)\r\n  }\r\n\r\n\r\n    // childNode = editing ? (\r\n    \r\n      // <Form.Item\r\n      //   style={{\r\n      //     margin: 0,\r\n      //   }}\r\n      //   name={dataIndex}\r\n      //   rules={[\r\n      //     {\r\n      //       required: true,\r\n      //       message: `${title} is required.`,\r\n      //     },\r\n      //   ]}\r\n      // >\r\n        \r\n      \r\n      //   {dataIndex===\"party_name\"?<Select ref={inputRef} onPressEnter={save} onBlur={save}> <Option value=\"jack\">Jack</Option>\r\n      // <Option value=\"lucy\">Lucy</Option>\r\n      // <Option value=\"disabled\" disabled>\r\n      //   Disabled\r\n      // </Option>\r\n      // <Option value=\"Yiminghe\">yiminghe</Option></Select> :<Input ref={inputRef} onPressEnter={save} onBlur={save} />}\r\n        \r\n      // </Form.Item>\r\n    // ) : (\r\n      // <div\r\n      //   className=\"editable-cell-value-wrap\"\r\n      //   style={{\r\n      //     paddingRight: 24,\r\n      //   }}\r\n      //   onClick={toggleEdit}\r\n      // >\r\n      //   {children}\r\n      // </div>\r\n      \r\n    // );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditingTableForVechicle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.columns = [\r\n      {\r\n        title: \"* Vehicle No\",\r\n        dataIndex: \"vehicle_no\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* DC.NO\",\r\n        dataIndex: \"dc_no\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* From\",\r\n        dataIndex: \"from_loc\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* To\",\r\n        dataIndex: \"to_loc\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Material\",\r\n        dataIndex: \"material\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Party Name\",\r\n        dataIndex: \"party_name\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Rate\",\r\n        dataIndex: \"rate\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Weight\",\r\n        dataIndex: \"weight\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* GST\",\r\n        dataIndex: \"gst\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Payment Type\",\r\n        dataIndex: \"payment_type\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Diseal Rate\",\r\n        dataIndex: \"diesel_rt\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Diseal Qty\",\r\n        dataIndex: \"diesel_qty\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Loading Quantity\",\r\n        dataIndex: \"loading_quantity\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Accepted Quantity\",\r\n        dataIndex: \"accepted_quantity\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Logistic Rent\",\r\n        dataIndex: \"logistic_rent\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Lead\",\r\n        dataIndex: \"lead\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Date\",\r\n        dataIndex: \"date\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* PUC\",\r\n        dataIndex: \"puc\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Expences\",\r\n        dataIndex: \"expences\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Driver Name\",\r\n        dataIndex: \"driver_name\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Profit\",\r\n        dataIndex: \"profit\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      {\r\n        title: \"* Tot Amt\",\r\n        dataIndex: \"total_amount\",\r\n        editable: true,\r\n        width: \"200\",\r\n      },\r\n      \r\n      \r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        render: (_, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <DeleteOutlined style={{color:\"black\"}} />\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(prevProps.rowData) !== JSON.stringify(this.props.rowData)\r\n    ) {\r\n      this.setState({\r\n        dataSource: this.props.rowData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      vehicle_no: \"\",\r\n      dc_no: \"\",\r\n      from_loc: \"\",\r\n      to_loc: \"\",\r\n      material: \"\",\r\n      party_name: \"\",\r\n      rate: \"\",\r\n      scale: \"\",\r\n      weight:\"\",\r\n      gst:\"\",\r\n      payment_type:\"\",\r\n      diesel_rt:\"\",\r\n      diesel_qty:\"\",\r\n      loading_quantity:\"\",\r\n      accepted_quantity:\"\",\r\n      logistic_rent:\"\",\r\n      lead:\"\",\r\n      date:\"\",\r\n      puc:\"\",\r\n      total_amount: \"\",\r\n      expences: \"\",\r\n      driver_name: \"\",\r\n      profit: \"\",\r\n      \r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState(\r\n      {\r\n        dataSource: newData,\r\n      },\r\n      () => this.props.getTableData(this.state.dataSource)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n          width:col.width\r\n        }),\r\n      };\r\n    });\r\n  \r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n         {this.props.view?\"\":<Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          Add a row\r\n        </Button>}\r\n        <Table\r\n          components={components}\r\n          \r\n          className=\"editingTable\"\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n          scroll={{ x: 4200 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditingTableForVechicle;\r\n"],"sourceRoot":""}